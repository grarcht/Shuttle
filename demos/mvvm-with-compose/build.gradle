plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'de.mannodermaus.android-junit5'
    id 'org.jetbrains.kotlin.android'
}

apply from: '../../detekt/detekt.gradle'

dokkaHtml {
    outputDirectory.set(file("documentation/kotlin"))
}

android {
    defaultConfig {
        applicationId 'com.grarcht.shuttle.mvvm_with_compose'
        compileSdk versions.android.compileSdk
        minSdk versions.android.minSdk
        targetSdk versions.android.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")
    }

    configurations.configureEach {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def name = details.requested.name
            if (name == "androidx.collection:collection:1.1.0" ||
                    name == "androidx.collection:collection-jvm:1.4.0") {
                details.useVersion("1.1.0")
            }
        }
    }

    kotlinOptions {
        jvmTarget = versions.jvmTarget
    }

    compileOptions {
        sourceCompatibility versions.sourceCompatibility
        targetCompatibility versions.targetCompatibility
    }

    buildFeatures {
        compose true
        dataBinding true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion versions.kotlinComposeCompilerExt
    }

    kapt {
        correctErrorTypes true
        javacOptions {
            // https://youtrack.jetbrains.com/issue/KT-47416
            // https://github.com/nvmnghia/yacv/commit/7f85c02e3d3d965fd780f130af802c73822699df
            // These options are normally set automatically via the Hilt Gradle plugin, but we
            // set them manually to workaround a bug in the Kotlin 1.5.20
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }

    namespace 'com.grarcht.shuttle.demo.mvvmwithcompose'
}

dependencies {
    implementation jetbrainsKotlinDeps.stdlib
    implementation jetbrainsKotlinDeps.coroutines

    implementation androidXDeps.activityKtx
    implementation androidXDeps.annotationJvm
    implementation androidXDeps.appCompat
    implementation androidXDeps.compose.activity
    implementation androidXDeps.compose.foundation
    implementation androidXDeps.compose.foundationLayout
    implementation androidXDeps.compose.material
    implementation androidXDeps.compose.materialIcons
    implementation androidXDeps.compose.runtime
    implementation androidXDeps.compose.ui
    implementation androidXDeps.compose.uiTooling
    implementation androidXDeps.constraintLayout
    implementation androidXDeps.coreKtx
    implementation androidXDeps.lifecycle.extensions
    implementation androidXDeps.lifecycle.viewModel
    implementation androidXDeps.material

    api dependencyInjectionDeps.hilt
    kapt dependencyInjectionDeps.hiltCompiler

    implementation project(':demos-core-lib')
    implementation project(':demos-databinding-lib')


    // To use a single aar file dependency, do something like the following.
    // If another integration extension is desired, a corresponding configuration should be
    // declared here for the "solution-builder" project.
    // implementation project(path: ':solution-builder', configuration: 'withRoom')

    // To use lighter weight, independent dependencies, comment out the above dependency and
    // uncomment the following:
//    implementation project(':framework')
//    implementation project(':framework-integrations-persistence')
//    implementation project(':framework-integrations-extensions-room')

    // To use maven dependencies, use the following:
    implementation shuttle.framework
    implementation shuttle.integrationsPersistence
    implementation shuttle.integrationsExtensionsRoom

    androidTestImplementation testingDeps.junit.ext
    androidTestImplementation testingDeps.espresso.core
    androidTestRuntimeOnly testingDeps.junit.junit5AndroidTestRunner
    testImplementation testingDeps.junit.jupiterApi
    testRuntimeOnly testingDeps.junit.jupiterEngine
}