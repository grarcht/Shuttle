plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.dokka'
    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.android'
}

apply from: '../../detekt/detekt.gradle'

dokkaHtml {
    outputDirectory.set(file("documentation/kotlin"))
}

android {
    compileSdk versions.android.compileSdk

    defaultConfig {
        applicationId "com.grarcht.shuttle.demo.mvvm"
        minSdk versions.android.minSdk
        targetSdk versions.android.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = versions.jvmTarget
    }

    buildFeatures {
        viewBinding true
    }

    namespace 'com.grarcht.shuttle.demo.mvvm'
}

dependencies {
    implementation jetbrainsKotlinDeps.stdlib
    implementation jetbrainsKotlinDeps.coroutines
    implementation androidXDeps.appCompat
    implementation androidXDeps.constraintLayout
    implementation androidXDeps.material
    implementation androidXDeps.fragmentKtx
    implementation androidXDeps.lifecycle.extensions
    implementation androidXDeps.lifecycle.viewModel
    implementation dependencyInjectionDeps.hilt
    implementation androidXDeps.coreKtx
    ksp dependencyInjectionDeps.hiltCompiler
    implementation androidXDeps.annotationJvm
    implementation project(':demos-core-lib')

    // To use a single aar file dependency, do something like the following.
    // If another integration extension is desired, a corresponding configuration should be
    // declared here for the "solution-builder" project.
//     implementation project(path: ':solution-builder', configuration: 'withRoom')

    // To use lighter weight, independent dependencies, comment out the above dependency and
    // uncomment the following:
     implementation project(':framework')
     implementation project(':framework-integrations-persistence')
     implementation project(':framework-integrations-extensions-room')

    // To use maven dependencies, use the following
//    implementation shuttle.framework
//    implementation shuttle.integrationsPersistence
//    implementation shuttle.integrationsExtensionsRoom
}