[{"name":"BOUND_AIDL","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.BOUND_AIDL","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/-b-o-u-n-d_-a-i-d-l/index.html","searchKeys":["BOUND_AIDL","BOUND_AIDL","com.grarcht.shuttle.framework.app.ShuttleServiceType.BOUND_AIDL"]},{"name":"BOUND_LOCAL","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.BOUND_LOCAL","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/-b-o-u-n-d_-l-o-c-a-l/index.html","searchKeys":["BOUND_LOCAL","BOUND_LOCAL","com.grarcht.shuttle.framework.app.ShuttleServiceType.BOUND_LOCAL"]},{"name":"BOUND_MESSENGER","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.BOUND_MESSENGER","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/-b-o-u-n-d_-m-e-s-s-e-n-g-e-r/index.html","searchKeys":["BOUND_MESSENGER","BOUND_MESSENGER","com.grarcht.shuttle.framework.app.ShuttleServiceType.BOUND_MESSENGER"]},{"name":"NON_BOUND_STARTED","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.NON_BOUND_STARTED","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/-n-o-n_-b-o-u-n-d_-s-t-a-r-t-e-d/index.html","searchKeys":["NON_BOUND_STARTED","NON_BOUND_STARTED","com.grarcht.shuttle.framework.app.ShuttleServiceType.NON_BOUND_STARTED"]},{"name":"abstract fun <D : ShuttleVisibilityData> observe(visibilityData: D): ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable.observe","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-visibility-observable/observe.html","searchKeys":["observe","abstract fun <D : ShuttleVisibilityData> observe(visibilityData: D): ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable.observe"]},{"name":"abstract fun <D : ShuttleVisibilityData> reportForVisibilityWith(visibilityData: D)","description":"com.grarcht.shuttle.framework.visibility.ShuttleVisibilityReporter.reportForVisibilityWith","location":"framework/com.grarcht.shuttle.framework.visibility/-shuttle-visibility-reporter/report-for-visibility-with.html","searchKeys":["reportForVisibilityWith","abstract fun <D : ShuttleVisibilityData> reportForVisibilityWith(visibilityData: D)","com.grarcht.shuttle.framework.visibility.ShuttleVisibilityReporter.reportForVisibilityWith"]},{"name":"abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleLifecycleAwareServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createLifecycleAwareServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/create-lifecycle-aware-service-connection.html","searchKeys":["createLifecycleAwareServiceConnection","abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleLifecycleAwareServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createLifecycleAwareServiceConnection"]},{"name":"abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createLifecycleAwareServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/create-lifecycle-aware-service-connection.html","searchKeys":["createLifecycleAwareServiceConnection","abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createLifecycleAwareServiceConnection"]},{"name":"abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(config: ShuttleServiceConnectionConfig<S>): ShuttleServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/create-service-connection.html","searchKeys":["createServiceConnection","abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(config: ShuttleServiceConnectionConfig<S>): ShuttleServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnection"]},{"name":"abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/create-service-connection.html","searchKeys":["createServiceConnection","abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnection"]},{"name":"abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnectionConfig(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleServiceConnectionConfig<S>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/create-service-connection-config.html","searchKeys":["createServiceConnectionConfig","abstract fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnectionConfig(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleServiceConnectionConfig<S>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnectionConfig"]},{"name":"abstract fun <S : ShuttleService> createLifecycleAwareServiceConnectionConfig(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnectionConfig<S>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createLifecycleAwareServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/create-lifecycle-aware-service-connection-config.html","searchKeys":["createLifecycleAwareServiceConnectionConfig","abstract fun <S : ShuttleService> createLifecycleAwareServiceConnectionConfig(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnectionConfig<S>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createLifecycleAwareServiceConnectionConfig"]},{"name":"abstract fun <S : ShuttleService> createServiceConnectionConfig(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean = false, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnectionConfig<S>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/create-service-connection-config.html","searchKeys":["createServiceConnectionConfig","abstract fun <S : ShuttleService> createServiceConnectionConfig(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean = false, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnectionConfig<S>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory.createServiceConnectionConfig"]},{"name":"abstract fun add(channel: Channel<ShuttleVisibilityData>): ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable.add","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-visibility-observable/add.html","searchKeys":["add","abstract fun add(channel: Channel<ShuttleVisibilityData>): ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable.add"]},{"name":"abstract fun bundleCargoWith(bundle: Bundle? = null, bundleFactory: BundleFactory? = DefaultBundleFactory()): ShuttleBundle","description":"com.grarcht.shuttle.framework.Shuttle.bundleCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/bundle-cargo-with.html","searchKeys":["bundleCargoWith","abstract fun bundleCargoWith(bundle: Bundle? = null, bundleFactory: BundleFactory? = DefaultBundleFactory()): ShuttleBundle","com.grarcht.shuttle.framework.Shuttle.bundleCargoWith"]},{"name":"abstract fun cleanShuttleFromAllDeliveries(receiver: Channel<ShuttleRemoveCargoResult>? = null): Shuttle","description":"com.grarcht.shuttle.framework.Shuttle.cleanShuttleFromAllDeliveries","location":"framework/com.grarcht.shuttle.framework/-shuttle/clean-shuttle-from-all-deliveries.html","searchKeys":["cleanShuttleFromAllDeliveries","abstract fun cleanShuttleFromAllDeliveries(receiver: Channel<ShuttleRemoveCargoResult>? = null): Shuttle","com.grarcht.shuttle.framework.Shuttle.cleanShuttleFromAllDeliveries"]},{"name":"abstract fun cleanShuttleFromDeliveryFor(cargoId: String, receiver: Channel<ShuttleRemoveCargoResult>? = null): Shuttle","description":"com.grarcht.shuttle.framework.Shuttle.cleanShuttleFromDeliveryFor","location":"framework/com.grarcht.shuttle.framework/-shuttle/clean-shuttle-from-delivery-for.html","searchKeys":["cleanShuttleFromDeliveryFor","abstract fun cleanShuttleFromDeliveryFor(cargoId: String, receiver: Channel<ShuttleRemoveCargoResult>? = null): Shuttle","com.grarcht.shuttle.framework.Shuttle.cleanShuttleFromDeliveryFor"]},{"name":"abstract fun cleanShuttleOnReturnTo(currentScreen: Class<*>, nextScreenClass: Class<*>, cargoId: String): Shuttle","description":"com.grarcht.shuttle.framework.Shuttle.cleanShuttleOnReturnTo","location":"framework/com.grarcht.shuttle.framework/-shuttle/clean-shuttle-on-return-to.html","searchKeys":["cleanShuttleOnReturnTo","abstract fun cleanShuttleOnReturnTo(currentScreen: Class<*>, nextScreenClass: Class<*>, cargoId: String): Shuttle","com.grarcht.shuttle.framework.Shuttle.cleanShuttleOnReturnTo"]},{"name":"abstract fun create(): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.BundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-bundle-factory/create.html","searchKeys":["create","abstract fun create(): Bundle","com.grarcht.shuttle.framework.content.bundle.BundleFactory.create"]},{"name":"abstract fun create(bundle: Bundle): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.BundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-bundle-factory/create.html","searchKeys":["create","abstract fun create(bundle: Bundle): Bundle","com.grarcht.shuttle.framework.content.bundle.BundleFactory.create"]},{"name":"abstract fun create(bundle: PersistableBundle): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.BundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-bundle-factory/create.html","searchKeys":["create","abstract fun create(bundle: PersistableBundle): Bundle","com.grarcht.shuttle.framework.content.bundle.BundleFactory.create"]},{"name":"abstract fun create(capacity: Int): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.BundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-bundle-factory/create.html","searchKeys":["create","abstract fun create(capacity: Int): Bundle","com.grarcht.shuttle.framework.content.bundle.BundleFactory.create"]},{"name":"abstract fun create(loader: ClassLoader?): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.BundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-bundle-factory/create.html","searchKeys":["create","abstract fun create(loader: ClassLoader?): Bundle","com.grarcht.shuttle.framework.content.bundle.BundleFactory.create"]},{"name":"abstract fun createMessenger(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, errorObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>): ShuttleMessengerDecorator","description":"com.grarcht.shuttle.framework.os.messenger.factory.ShuttleMessengerFactory.createMessenger","location":"framework/com.grarcht.shuttle.framework.os.messenger.factory/-shuttle-messenger-factory/create-messenger.html","searchKeys":["createMessenger","abstract fun createMessenger(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, errorObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>): ShuttleMessengerDecorator","com.grarcht.shuttle.framework.os.messenger.factory.ShuttleMessengerFactory.createMessenger"]},{"name":"abstract fun dispose(): ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable.dispose","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-visibility-observable/dispose.html","searchKeys":["dispose","abstract fun dispose(): ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable.dispose"]},{"name":"abstract fun intentCargoWith(action: String): ShuttleIntent","description":"com.grarcht.shuttle.framework.Shuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","abstract fun intentCargoWith(action: String): ShuttleIntent","com.grarcht.shuttle.framework.Shuttle.intentCargoWith"]},{"name":"abstract fun intentCargoWith(action: String, uri: Uri): ShuttleIntent","description":"com.grarcht.shuttle.framework.Shuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","abstract fun intentCargoWith(action: String, uri: Uri): ShuttleIntent","com.grarcht.shuttle.framework.Shuttle.intentCargoWith"]},{"name":"abstract fun intentCargoWith(action: String, uri: Uri, packageContext: Context, cls: Class<*>): ShuttleIntent","description":"com.grarcht.shuttle.framework.Shuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","abstract fun intentCargoWith(action: String, uri: Uri, packageContext: Context, cls: Class<*>): ShuttleIntent","com.grarcht.shuttle.framework.Shuttle.intentCargoWith"]},{"name":"abstract fun intentCargoWith(intent: Intent): ShuttleIntent","description":"com.grarcht.shuttle.framework.Shuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","abstract fun intentCargoWith(intent: Intent): ShuttleIntent","com.grarcht.shuttle.framework.Shuttle.intentCargoWith"]},{"name":"abstract fun intentCargoWith(packageContext: Context, cls: Class<*>): ShuttleIntent","description":"com.grarcht.shuttle.framework.Shuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","abstract fun intentCargoWith(packageContext: Context, cls: Class<*>): ShuttleIntent","com.grarcht.shuttle.framework.Shuttle.intentCargoWith"]},{"name":"abstract fun intentChooserCargoWith(target: Intent, title: CharSequence?): ShuttleIntent","description":"com.grarcht.shuttle.framework.Shuttle.intentChooserCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/intent-chooser-cargo-with.html","searchKeys":["intentChooserCargoWith","abstract fun intentChooserCargoWith(target: Intent, title: CharSequence?): ShuttleIntent","com.grarcht.shuttle.framework.Shuttle.intentChooserCargoWith"]},{"name":"abstract fun intentChooserCargoWith(target: Intent?, title: CharSequence?, sender: IntentSender?): ShuttleIntent","description":"com.grarcht.shuttle.framework.Shuttle.intentChooserCargoWith","location":"framework/com.grarcht.shuttle.framework/-shuttle/intent-chooser-cargo-with.html","searchKeys":["intentChooserCargoWith","abstract fun intentChooserCargoWith(target: Intent?, title: CharSequence?, sender: IntentSender?): ShuttleIntent","com.grarcht.shuttle.framework.Shuttle.intentChooserCargoWith"]},{"name":"abstract fun onReceiveMessage(messageWhat: Int, msg: Message)","description":"com.grarcht.shuttle.framework.os.messenger.ShuttleMessageReceiver.onReceiveMessage","location":"framework/com.grarcht.shuttle.framework.os.messenger/-shuttle-message-receiver/on-receive-message.html","searchKeys":["onReceiveMessage","abstract fun onReceiveMessage(messageWhat: Int, msg: Message)","com.grarcht.shuttle.framework.os.messenger.ShuttleMessageReceiver.onReceiveMessage"]},{"name":"abstract fun removeCargoAfterDelivery(currentScreenClass: Class<*>, nextScreenClass: Class<*>, cargoId: String)","description":"com.grarcht.shuttle.framework.screen.ShuttleFacade.removeCargoAfterDelivery","location":"framework/com.grarcht.shuttle.framework.screen/-shuttle-facade/remove-cargo-after-delivery.html","searchKeys":["removeCargoAfterDelivery","abstract fun removeCargoAfterDelivery(currentScreenClass: Class<*>, nextScreenClass: Class<*>, cargoId: String)","com.grarcht.shuttle.framework.screen.ShuttleFacade.removeCargoAfterDelivery"]},{"name":"abstract fun validate(data: D): Boolean","description":"com.grarcht.shuttle.framework.validator.ShuttleValidator.validate","location":"framework/com.grarcht.shuttle.framework.validator/-shuttle-validator/validate.html","searchKeys":["validate","abstract fun validate(data: D): Boolean","com.grarcht.shuttle.framework.validator.ShuttleValidator.validate"]},{"name":"abstract suspend fun <D : Serializable> pickup(cargoId: String): Channel<ShuttlePickupCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.pickup","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-warehouse/pickup.html","searchKeys":["pickup","abstract suspend fun <D : Serializable> pickup(cargoId: String): Channel<ShuttlePickupCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.pickup"]},{"name":"abstract suspend fun <D : Serializable> pickupCargo(cargoId: String): Channel<ShuttlePickupCargoResult>","description":"com.grarcht.shuttle.framework.Shuttle.pickupCargo","location":"framework/com.grarcht.shuttle.framework/-shuttle/pickup-cargo.html","searchKeys":["pickupCargo","abstract suspend fun <D : Serializable> pickupCargo(cargoId: String): Channel<ShuttlePickupCargoResult>","com.grarcht.shuttle.framework.Shuttle.pickupCargo"]},{"name":"abstract suspend fun <D : Serializable> store(cargoId: String, data: D?): Channel<ShuttleStoreCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.store","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-warehouse/store.html","searchKeys":["store","abstract suspend fun <D : Serializable> store(cargoId: String, data: D?): Channel<ShuttleStoreCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.store"]},{"name":"abstract suspend fun removeAllCargo(): Channel<ShuttleRemoveCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.removeAllCargo","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-warehouse/remove-all-cargo.html","searchKeys":["removeAllCargo","abstract suspend fun removeAllCargo(): Channel<ShuttleRemoveCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.removeAllCargo"]},{"name":"abstract suspend fun removeCargoBy(cargoId: String): Channel<ShuttleRemoveCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.removeCargoBy","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-warehouse/remove-cargo-by.html","searchKeys":["removeCargoBy","abstract suspend fun removeCargoBy(cargoId: String): Channel<ShuttleRemoveCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse.removeCargoBy"]},{"name":"abstract val shuttleFacade: ShuttleFacade","description":"com.grarcht.shuttle.framework.Shuttle.shuttleFacade","location":"framework/com.grarcht.shuttle.framework/-shuttle/shuttle-facade.html","searchKeys":["shuttleFacade","abstract val shuttleFacade: ShuttleFacade","com.grarcht.shuttle.framework.Shuttle.shuttleFacade"]},{"name":"abstract val shuttleWarehouse: ShuttleWarehouse","description":"com.grarcht.shuttle.framework.Shuttle.shuttleWarehouse","location":"framework/com.grarcht.shuttle.framework/-shuttle/shuttle-warehouse.html","searchKeys":["shuttleWarehouse","abstract val shuttleWarehouse: ShuttleWarehouse","com.grarcht.shuttle.framework.Shuttle.shuttleWarehouse"]},{"name":"class Removing(val cargoId: String) : ShuttleRemoveCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removing","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-removing/index.html","searchKeys":["Removing","class Removing(val cargoId: String) : ShuttleRemoveCargoResult","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removing"]},{"name":"class ShuttleLifecycleAwareServiceConnection<S : ShuttleService, B : ShuttleBinder<S>>(config: ShuttleLifecycleAwareServiceConnectionConfig<S>) : ShuttleServiceConnection<S, B> , DefaultLifecycleObserver","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection/index.html","searchKeys":["ShuttleLifecycleAwareServiceConnection","class ShuttleLifecycleAwareServiceConnection<S : ShuttleService, B : ShuttleBinder<S>>(config: ShuttleLifecycleAwareServiceConnectionConfig<S>) : ShuttleServiceConnection<S, B> , DefaultLifecycleObserver","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection"]},{"name":"class ShuttleServiceConnectionTypesFactory : ShuttleServiceConnectionFactory","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/index.html","searchKeys":["ShuttleServiceConnectionTypesFactory","class ShuttleServiceConnectionTypesFactory : ShuttleServiceConnectionFactory","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory"]},{"name":"class ShuttleServiceMessageValidator : ShuttleValidator<Message> ","description":"com.grarcht.shuttle.framework.validator.ShuttleServiceMessageValidator","location":"framework/com.grarcht.shuttle.framework.validator/-shuttle-service-message-validator/index.html","searchKeys":["ShuttleServiceMessageValidator","class ShuttleServiceMessageValidator : ShuttleValidator<Message> ","com.grarcht.shuttle.framework.validator.ShuttleServiceMessageValidator"]},{"name":"class ShuttleServiceMessengerFactory : ShuttleMessengerFactory","description":"com.grarcht.shuttle.framework.os.messenger.factory.ShuttleServiceMessengerFactory","location":"framework/com.grarcht.shuttle.framework.os.messenger.factory/-shuttle-service-messenger-factory/index.html","searchKeys":["ShuttleServiceMessengerFactory","class ShuttleServiceMessengerFactory : ShuttleMessengerFactory","com.grarcht.shuttle.framework.os.messenger.factory.ShuttleServiceMessengerFactory"]},{"name":"class Storing(val cargoId: String) : ShuttleStoreCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Storing","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-storing/index.html","searchKeys":["Storing","class Storing(val cargoId: String) : ShuttleStoreCargoResult","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Storing"]},{"name":"const val ALL_CARGO: String","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Companion.ALL_CARGO","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-companion/-a-l-l_-c-a-r-g-o.html","searchKeys":["ALL_CARGO","const val ALL_CARGO: String","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Companion.ALL_CARGO"]},{"name":"const val CARGO_ID_KEY: String","description":"com.grarcht.shuttle.framework.CARGO_ID_KEY","location":"framework/com.grarcht.shuttle.framework/-c-a-r-g-o_-i-d_-k-e-y.html","searchKeys":["CARGO_ID_KEY","const val CARGO_ID_KEY: String","com.grarcht.shuttle.framework.CARGO_ID_KEY"]},{"name":"const val NO_CARGO_ID: String","description":"com.grarcht.shuttle.framework.NO_CARGO_ID","location":"framework/com.grarcht.shuttle.framework/-n-o_-c-a-r-g-o_-i-d.html","searchKeys":["NO_CARGO_ID","const val NO_CARGO_ID: String","com.grarcht.shuttle.framework.NO_CARGO_ID"]},{"name":"const val NO_CARGO_ID: String","description":"com.grarcht.shuttle.framework.model.NO_CARGO_ID","location":"framework/com.grarcht.shuttle.framework.model/-n-o_-c-a-r-g-o_-i-d.html","searchKeys":["NO_CARGO_ID","const val NO_CARGO_ID: String","com.grarcht.shuttle.framework.model.NO_CARGO_ID"]},{"name":"constructor()","description":"com.grarcht.shuttle.framework.app.ShuttleService.ShuttleService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/-shuttle-service.html","searchKeys":["ShuttleService","constructor()","com.grarcht.shuttle.framework.app.ShuttleService.ShuttleService"]},{"name":"constructor()","description":"com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.DefaultBundleFactory","location":"framework/com.grarcht.shuttle.framework.content.bundle/-default-bundle-factory/-default-bundle-factory.html","searchKeys":["DefaultBundleFactory","constructor()","com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.DefaultBundleFactory"]},{"name":"constructor()","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.ShuttleServiceConnectionTypesFactory","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/-shuttle-service-connection-types-factory.html","searchKeys":["ShuttleServiceConnectionTypesFactory","constructor()","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.ShuttleServiceConnectionTypesFactory"]},{"name":"constructor()","description":"com.grarcht.shuttle.framework.os.messenger.factory.ShuttleServiceMessengerFactory.ShuttleServiceMessengerFactory","location":"framework/com.grarcht.shuttle.framework.os.messenger.factory/-shuttle-service-messenger-factory/-shuttle-service-messenger-factory.html","searchKeys":["ShuttleServiceMessengerFactory","constructor()","com.grarcht.shuttle.framework.os.messenger.factory.ShuttleServiceMessengerFactory.ShuttleServiceMessengerFactory"]},{"name":"constructor()","description":"com.grarcht.shuttle.framework.validator.ShuttleServiceMessageValidator.ShuttleServiceMessageValidator","location":"framework/com.grarcht.shuttle.framework.validator/-shuttle-service-message-validator/-shuttle-service-message-validator.html","searchKeys":["ShuttleServiceMessageValidator","constructor()","com.grarcht.shuttle.framework.validator.ShuttleServiceMessageValidator.ShuttleServiceMessageValidator"]},{"name":"constructor(application: Application, shuttleWarehouse: ShuttleWarehouse, handler: Handler? = Handler(Looper.getMainLooper()), backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"com.grarcht.shuttle.framework.screen.ShuttleCargoFacade.ShuttleCargoFacade","location":"framework/com.grarcht.shuttle.framework.screen/-shuttle-cargo-facade/-shuttle-cargo-facade.html","searchKeys":["ShuttleCargoFacade","constructor(application: Application, shuttleWarehouse: ShuttleWarehouse, handler: Handler? = Handler(Looper.getMainLooper()), backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","com.grarcht.shuttle.framework.screen.ShuttleCargoFacade.ShuttleCargoFacade"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.ShuttleParcelCargo","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/-shuttle-parcel-cargo.html","searchKeys":["ShuttleParcelCargo","constructor(cargoId: String)","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.ShuttleParcelCargo"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Loading.Loading","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-loading/-loading.html","searchKeys":["Loading","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Loading.Loading"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.DoesNotExist.DoesNotExist","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-does-not-exist/-does-not-exist.html","searchKeys":["DoesNotExist","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.DoesNotExist.DoesNotExist"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.NotRemovingCargoYet.NotRemovingCargoYet","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-not-removing-cargo-yet/-not-removing-cargo-yet.html","searchKeys":["NotRemovingCargoYet","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.NotRemovingCargoYet.NotRemovingCargoYet"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removed.Removed","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-removed/-removed.html","searchKeys":["Removed","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removed.Removed"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removing.Removing","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-removing/-removing.html","searchKeys":["Removing","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removing.Removing"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.NotStoringCargoYet.NotStoringCargoYet","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-not-storing-cargo-yet/-not-storing-cargo-yet.html","searchKeys":["NotStoringCargoYet","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.NotStoringCargoYet.NotStoringCargoYet"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Storing.Storing","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-storing/-storing.html","searchKeys":["Storing","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Storing.Storing"]},{"name":"constructor(cargoId: String)","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Success.Success","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-success/-success.html","searchKeys":["Success","constructor(cargoId: String)","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Success.Success"]},{"name":"constructor(cargoId: String, message: String? = null, throwable: T? = null)","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.Error","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-error/-error.html","searchKeys":["Error","constructor(cargoId: String, message: String? = null, throwable: T? = null)","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.Error"]},{"name":"constructor(cargoId: String, message: String? = null, throwable: T? = null)","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.UnableToRemove","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-unable-to-remove/-unable-to-remove.html","searchKeys":["UnableToRemove","constructor(cargoId: String, message: String? = null, throwable: T? = null)","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.UnableToRemove"]},{"name":"constructor(cargoId: String, message: String? = null, throwable: T? = null)","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.Error","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-error/-error.html","searchKeys":["Error","constructor(cargoId: String, message: String? = null, throwable: T? = null)","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.Error"]},{"name":"constructor(config: ShuttleLifecycleAwareServiceConnectionConfig<S>)","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.ShuttleLifecycleAwareServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection/-shuttle-lifecycle-aware-service-connection.html","searchKeys":["ShuttleLifecycleAwareServiceConnection","constructor(config: ShuttleLifecycleAwareServiceConnectionConfig<S>)","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.ShuttleLifecycleAwareServiceConnection"]},{"name":"constructor(config: ShuttleServiceConnectionConfig<S>)","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.ShuttleServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/-shuttle-service-connection.html","searchKeys":["ShuttleServiceConnection","constructor(config: ShuttleServiceConnectionConfig<S>)","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.ShuttleServiceConnection"]},{"name":"constructor(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean = false, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>, serviceConnectionFactory: ShuttleServiceConnectionFactory)","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.ShuttleLifecycleAwareServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/-shuttle-lifecycle-aware-service-connection-config.html","searchKeys":["ShuttleLifecycleAwareServiceConnectionConfig","constructor(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean = false, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>, serviceConnectionFactory: ShuttleServiceConnectionFactory)","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.ShuttleLifecycleAwareServiceConnectionConfig"]},{"name":"constructor(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean = false, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>)","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.ShuttleServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/-shuttle-service-connection-config.html","searchKeys":["ShuttleServiceConnectionConfig","constructor(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean = false, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>)","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.ShuttleServiceConnectionConfig"]},{"name":"constructor(context: String, data: D? = null, message: String = \"\")","description":"com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.Information","location":"framework/com.grarcht.shuttle.framework.visibility.information/-shuttle-visibility-feedback/-information/-information.html","searchKeys":["Information","constructor(context: String, data: D? = null, message: String = \"\")","com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.Information"]},{"name":"constructor(context: String, errorMessage: String = \"\", error: Throwable)","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.ObservedError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-default-error/-observed-error/-observed-error.html","searchKeys":["ObservedError","constructor(context: String, errorMessage: String = \"\", error: Throwable)","com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.ObservedError"]},{"name":"constructor(data: D)","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Success.Success","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-success/-success.html","searchKeys":["Success","constructor(data: D)","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Success.Success"]},{"name":"constructor(localService: S? = null, ipcMessenger: Messenger? = null)","description":"com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel.ShuttleConnectedServiceModel","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-connected-service-model/-shuttle-connected-service-model.html","searchKeys":["ShuttleConnectedServiceModel","constructor(localService: S? = null, ipcMessenger: Messenger? = null)","com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel.ShuttleConnectedServiceModel"]},{"name":"constructor(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, visibilityObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>)","description":"com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.ShuttleMessengerDecorator","location":"framework/com.grarcht.shuttle.framework.os.messenger/-shuttle-messenger-decorator/-shuttle-messenger-decorator.html","searchKeys":["ShuttleMessengerDecorator","constructor(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, visibilityObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>)","com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.ShuttleMessengerDecorator"]},{"name":"constructor(parcel: Parcel)","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.ShuttleParcelCargo","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/-shuttle-parcel-cargo.html","searchKeys":["ShuttleParcelCargo","constructor(parcel: Parcel)","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.ShuttleParcelCargo"]},{"name":"constructor(parcelable: Parcelable)","description":"com.grarcht.shuttle.framework.content.bundle.SerializableParcelable.SerializableParcelable","location":"framework/com.grarcht.shuttle.framework.content.bundle/-serializable-parcelable/-serializable-parcelable.html","searchKeys":["SerializableParcelable","constructor(parcelable: Parcelable)","com.grarcht.shuttle.framework.content.bundle.SerializableParcelable.SerializableParcelable"]},{"name":"constructor(reporter: ShuttleVisibilityReporter, coroutineScope: CoroutineScope)","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.ShuttleChannelVisibilityObservable","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-channel-visibility-observable/-shuttle-channel-visibility-observable.html","searchKeys":["ShuttleChannelVisibilityObservable","constructor(reporter: ShuttleVisibilityReporter, coroutineScope: CoroutineScope)","com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.ShuttleChannelVisibilityObservable"]},{"name":"constructor(repository: ShuttleWarehouse, internalBundle: Bundle?, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.ShuttleBundle","location":"framework/com.grarcht.shuttle.framework.content.bundle/-shuttle-bundle/-shuttle-bundle.html","searchKeys":["ShuttleBundle","constructor(repository: ShuttleWarehouse, internalBundle: Bundle?, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.ShuttleBundle"]},{"name":"constructor(service: T)","description":"com.grarcht.shuttle.framework.os.ShuttleBinder.ShuttleBinder","location":"framework/com.grarcht.shuttle.framework.os/-shuttle-binder/-shuttle-binder.html","searchKeys":["ShuttleBinder","constructor(service: T)","com.grarcht.shuttle.framework.os.ShuttleBinder.ShuttleBinder"]},{"name":"constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.ConnectToServiceError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-connect-to-service-error/-connect-to-service-error.html","searchKeys":["ConnectToServiceError","constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.ConnectToServiceError"]},{"name":"constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.DisconnectFromServiceError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-disconnect-from-service-error/-disconnect-from-service-error.html","searchKeys":["DisconnectFromServiceError","constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.DisconnectFromServiceError"]},{"name":"constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.GeneralError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-general-error/-general-error.html","searchKeys":["GeneralError","constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.GeneralError"]},{"name":"constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.HandleMessageError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-handle-message-error/-handle-message-error.html","searchKeys":["HandleMessageError","constructor(serviceName: String, data: D? = null, errorMessage: String = \"\", error: Throwable)","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.HandleMessageError"]},{"name":"constructor(serviceName: String, shuttle: Shuttle, rebindOnUnbind: Boolean = false, errorObservable: ShuttleVisibilityObservable, bindingType: ShuttleServiceType, messengerFactory: ShuttleMessengerFactory, messageValidator: ShuttleValidator<Message> = ShuttleServiceMessageValidator())","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.ShuttleServiceConfig","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/-shuttle-service-config.html","searchKeys":["ShuttleServiceConfig","constructor(serviceName: String, shuttle: Shuttle, rebindOnUnbind: Boolean = false, errorObservable: ShuttleVisibilityObservable, bindingType: ShuttleServiceType, messengerFactory: ShuttleMessengerFactory, messageValidator: ShuttleValidator<Message> = ShuttleServiceMessageValidator())","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.ShuttleServiceConfig"]},{"name":"constructor(shuttleDao: ShuttleDataAccessObject, shuttleDataModelFactory: ShuttleDataModelFactory, appFileDirectoryPath: String, shuttleFileSystemGateway: ShuttleFileSystemGateway)","description":"com.grarcht.shuttle.framework.warehouse.ShuttleRepository.ShuttleRepository","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-repository/-shuttle-repository.html","searchKeys":["ShuttleRepository","constructor(shuttleDao: ShuttleDataAccessObject, shuttleDataModelFactory: ShuttleDataModelFactory, appFileDirectoryPath: String, shuttleFileSystemGateway: ShuttleFileSystemGateway)","com.grarcht.shuttle.framework.warehouse.ShuttleRepository.ShuttleRepository"]},{"name":"constructor(shuttleFacade: ShuttleFacade, shuttleWarehouse: ShuttleWarehouse, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"com.grarcht.shuttle.framework.CargoShuttle.CargoShuttle","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/-cargo-shuttle.html","searchKeys":["CargoShuttle","constructor(shuttleFacade: ShuttleFacade, shuttleWarehouse: ShuttleWarehouse, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","com.grarcht.shuttle.framework.CargoShuttle.CargoShuttle"]},{"name":"data class ConnectToServiceError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-connect-to-service-error/index.html","searchKeys":["ConnectToServiceError","data class ConnectToServiceError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError"]},{"name":"data class DisconnectFromServiceError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-disconnect-from-service-error/index.html","searchKeys":["DisconnectFromServiceError","data class DisconnectFromServiceError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError"]},{"name":"data class GeneralError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-general-error/index.html","searchKeys":["GeneralError","data class GeneralError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError"]},{"name":"data class HandleMessageError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-handle-message-error/index.html","searchKeys":["HandleMessageError","data class HandleMessageError<D : Any>(val serviceName: String, val data: D? = null, val errorMessage: String = \"\", val error: Throwable) : ShuttleServiceError","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError"]},{"name":"data class Information<D : Any>(val context: String, val data: D? = null, val message: String = \"\") : ShuttleVisibilityFeedback","description":"com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information","location":"framework/com.grarcht.shuttle.framework.visibility.information/-shuttle-visibility-feedback/-information/index.html","searchKeys":["Information","data class Information<D : Any>(val context: String, val data: D? = null, val message: String = \"\") : ShuttleVisibilityFeedback","com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information"]},{"name":"data class NotStoringCargoYet(val cargoId: String) : ShuttleStoreCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.NotStoringCargoYet","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-not-storing-cargo-yet/index.html","searchKeys":["NotStoringCargoYet","data class NotStoringCargoYet(val cargoId: String) : ShuttleStoreCargoResult","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.NotStoringCargoYet"]},{"name":"data class ObservedError(val context: String, val errorMessage: String = \"\", val error: Throwable) : ShuttleDefaultError","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-default-error/-observed-error/index.html","searchKeys":["ObservedError","data class ObservedError(val context: String, val errorMessage: String = \"\", val error: Throwable) : ShuttleDefaultError","com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError"]},{"name":"data class SerializableParcelable(val parcelable: Parcelable) : Serializable","description":"com.grarcht.shuttle.framework.content.bundle.SerializableParcelable","location":"framework/com.grarcht.shuttle.framework.content.bundle/-serializable-parcelable/index.html","searchKeys":["SerializableParcelable","data class SerializableParcelable(val parcelable: Parcelable) : Serializable","com.grarcht.shuttle.framework.content.bundle.SerializableParcelable"]},{"name":"data class ShuttleBinder<T : ShuttleService>(service: T) : Binder","description":"com.grarcht.shuttle.framework.os.ShuttleBinder","location":"framework/com.grarcht.shuttle.framework.os/-shuttle-binder/index.html","searchKeys":["ShuttleBinder","data class ShuttleBinder<T : ShuttleService>(service: T) : Binder","com.grarcht.shuttle.framework.os.ShuttleBinder"]},{"name":"data class ShuttleConnectedServiceModel<S : ShuttleService>(var localService: S? = null, var ipcMessenger: Messenger? = null)","description":"com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-connected-service-model/index.html","searchKeys":["ShuttleConnectedServiceModel","data class ShuttleConnectedServiceModel<S : ShuttleService>(var localService: S? = null, var ipcMessenger: Messenger? = null)","com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel"]},{"name":"data class ShuttleLifecycleAwareServiceConnectionConfig<S : ShuttleService>(val context: Context?, val serviceClazz: Class<S>, val lifecycle: Lifecycle, val serviceName: String, val errorObservable: ShuttleVisibilityObservable, val useWithIPC: Boolean = false, val coroutineScope: CoroutineScope, val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>, val serviceConnectionFactory: ShuttleServiceConnectionFactory)","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/index.html","searchKeys":["ShuttleLifecycleAwareServiceConnectionConfig","data class ShuttleLifecycleAwareServiceConnectionConfig<S : ShuttleService>(val context: Context?, val serviceClazz: Class<S>, val lifecycle: Lifecycle, val serviceName: String, val errorObservable: ShuttleVisibilityObservable, val useWithIPC: Boolean = false, val coroutineScope: CoroutineScope, val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>, val serviceConnectionFactory: ShuttleServiceConnectionFactory)","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig"]},{"name":"data class ShuttleServiceConfig(val serviceName: String, val shuttle: Shuttle, val rebindOnUnbind: Boolean = false, val errorObservable: ShuttleVisibilityObservable, val bindingType: ShuttleServiceType, val messengerFactory: ShuttleMessengerFactory, val messageValidator: ShuttleValidator<Message> = ShuttleServiceMessageValidator())","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/index.html","searchKeys":["ShuttleServiceConfig","data class ShuttleServiceConfig(val serviceName: String, val shuttle: Shuttle, val rebindOnUnbind: Boolean = false, val errorObservable: ShuttleVisibilityObservable, val bindingType: ShuttleServiceType, val messengerFactory: ShuttleMessengerFactory, val messageValidator: ShuttleValidator<Message> = ShuttleServiceMessageValidator())","com.grarcht.shuttle.framework.app.ShuttleServiceConfig"]},{"name":"data class ShuttleServiceConnectionConfig<S : ShuttleService>(val context: Context?, val serviceName: String, val errorObservable: ShuttleVisibilityObservable, val useWithIPC: Boolean = false, val coroutineScope: CoroutineScope, val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>)","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/index.html","searchKeys":["ShuttleServiceConnectionConfig","data class ShuttleServiceConnectionConfig<S : ShuttleService>(val context: Context?, val serviceName: String, val errorObservable: ShuttleVisibilityObservable, val useWithIPC: Boolean = false, val coroutineScope: CoroutineScope, val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>)","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig"]},{"name":"data object NotPickingUpCargoYet : ShuttlePickupCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.NotPickingUpCargoYet","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-not-picking-up-cargo-yet/index.html","searchKeys":["NotPickingUpCargoYet","data object NotPickingUpCargoYet : ShuttlePickupCargoResult","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.NotPickingUpCargoYet"]},{"name":"enum ShuttleServiceType : Enum<ShuttleServiceType> ","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/index.html","searchKeys":["ShuttleServiceType","enum ShuttleServiceType : Enum<ShuttleServiceType> ","com.grarcht.shuttle.framework.app.ShuttleServiceType"]},{"name":"fun <D : Serializable> transport(cargoId: String, data: D?): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.transport","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/transport.html","searchKeys":["transport","fun <D : Serializable> transport(cargoId: String, data: D?): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.transport"]},{"name":"fun <E> Channel<E>?.closeQuietly(scope: CoroutineScope?, cause: CancellationException? = null, logTag: String? = null)","description":"com.grarcht.shuttle.framework.coroutines.channel.closeQuietly","location":"framework/com.grarcht.shuttle.framework.coroutines.channel/close-quietly.html","searchKeys":["closeQuietly","fun <E> Channel<E>?.closeQuietly(scope: CoroutineScope?, cause: CancellationException? = null, logTag: String? = null)","com.grarcht.shuttle.framework.coroutines.channel.closeQuietly"]},{"name":"fun Context?.registerReceiverQuietly(receiver: BroadcastReceiver, filter: IntentFilter, logTag: String? = null)","description":"com.grarcht.shuttle.framework.content.registerReceiverQuietly","location":"framework/com.grarcht.shuttle.framework.content/register-receiver-quietly.html","searchKeys":["registerReceiverQuietly","fun Context?.registerReceiverQuietly(receiver: BroadcastReceiver, filter: IntentFilter, logTag: String? = null)","com.grarcht.shuttle.framework.content.registerReceiverQuietly"]},{"name":"fun Context?.unregisterReceiverQuietly(receiver: BroadcastReceiver, logTag: String? = null)","description":"com.grarcht.shuttle.framework.content.unregisterReceiverQuietly","location":"framework/com.grarcht.shuttle.framework.content/unregister-receiver-quietly.html","searchKeys":["unregisterReceiverQuietly","fun Context?.unregisterReceiverQuietly(receiver: BroadcastReceiver, logTag: String? = null)","com.grarcht.shuttle.framework.content.unregisterReceiverQuietly"]},{"name":"fun cancelScopeQuietly(scope: CoroutineScope?, cause: CancellationException? = null, context: String, errorObservable: ShuttleVisibilityObservable)","description":"com.grarcht.shuttle.framework.coroutines.scope.cancelScopeQuietly","location":"framework/com.grarcht.shuttle.framework.coroutines.scope/cancel-scope-quietly.html","searchKeys":["cancelScopeQuietly","fun cancelScopeQuietly(scope: CoroutineScope?, cause: CancellationException? = null, context: String, errorObservable: ShuttleVisibilityObservable)","com.grarcht.shuttle.framework.coroutines.scope.cancelScopeQuietly"]},{"name":"fun cleanShuttleOnReturnTo(currentScreenClass: Class<*>, nextScreenClass: Class<*>, cargoId: String): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.cleanShuttleOnReturnTo","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/clean-shuttle-on-return-to.html","searchKeys":["cleanShuttleOnReturnTo","fun cleanShuttleOnReturnTo(currentScreenClass: Class<*>, nextScreenClass: Class<*>, cargoId: String): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.cleanShuttleOnReturnTo"]},{"name":"fun clearCargoIds()","description":"com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.clearCargoIds","location":"framework/com.grarcht.shuttle.framework.os.messenger/-shuttle-messenger-decorator/clear-cargo-ids.html","searchKeys":["clearCargoIds","fun clearCargoIds()","com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.clearCargoIds"]},{"name":"fun create(): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-shuttle-bundle/create.html","searchKeys":["create","fun create(): Bundle","com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.create"]},{"name":"fun create(): Intent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.create","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/create.html","searchKeys":["create","fun create(): Intent","com.grarcht.shuttle.framework.content.ShuttleIntent.create"]},{"name":"fun deliver(context: Context)","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.deliver","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/deliver.html","searchKeys":["deliver","fun deliver(context: Context)","com.grarcht.shuttle.framework.content.ShuttleIntent.deliver"]},{"name":"fun getBinder(): IBinder?","description":"com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.getBinder","location":"framework/com.grarcht.shuttle.framework.os.messenger/-shuttle-messenger-decorator/get-binder.html","searchKeys":["getBinder","fun getBinder(): IBinder?","com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.getBinder"]},{"name":"fun getService(): T","description":"com.grarcht.shuttle.framework.os.ShuttleBinder.getService","location":"framework/com.grarcht.shuttle.framework.os/-shuttle-binder/get-service.html","searchKeys":["getService","fun getService(): T","com.grarcht.shuttle.framework.os.ShuttleBinder.getService"]},{"name":"fun intent(action: String): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.intent","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/intent.html","searchKeys":["intent","fun intent(action: String): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.intent"]},{"name":"fun intent(action: String, uri: Uri): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.intent","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/intent.html","searchKeys":["intent","fun intent(action: String, uri: Uri): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.intent"]},{"name":"fun intent(action: String, uri: Uri, packageContext: Context, cls: Class<*>): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.intent","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/intent.html","searchKeys":["intent","fun intent(action: String, uri: Uri, packageContext: Context, cls: Class<*>): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.intent"]},{"name":"fun intent(intent: Intent): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.intent","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/intent.html","searchKeys":["intent","fun intent(intent: Intent): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.intent"]},{"name":"fun intent(packageContext: Context, cls: Class<*>): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.intent","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/intent.html","searchKeys":["intent","fun intent(packageContext: Context, cls: Class<*>): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.intent"]},{"name":"fun intentChooser(target: Intent?, title: CharSequence?): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.intentChooser","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/intent-chooser.html","searchKeys":["intentChooser","fun intentChooser(target: Intent?, title: CharSequence?): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.intentChooser"]},{"name":"fun intentChooser(target: Intent?, title: CharSequence?, sender: IntentSender?): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.intentChooser","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/intent-chooser.html","searchKeys":["intentChooser","fun intentChooser(target: Intent?, title: CharSequence?, sender: IntentSender?): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.intentChooser"]},{"name":"fun isAIDLBoundService(): Boolean","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.isAIDLBoundService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/is-a-i-d-l-bound-service.html","searchKeys":["isAIDLBoundService","fun isAIDLBoundService(): Boolean","com.grarcht.shuttle.framework.app.ShuttleServiceType.isAIDLBoundService"]},{"name":"fun isBoundService(): Boolean","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.isBoundService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/is-bound-service.html","searchKeys":["isBoundService","fun isBoundService(): Boolean","com.grarcht.shuttle.framework.app.ShuttleServiceType.isBoundService"]},{"name":"fun isLocalBoundService(): Boolean","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.isLocalBoundService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/is-local-bound-service.html","searchKeys":["isLocalBoundService","fun isLocalBoundService(): Boolean","com.grarcht.shuttle.framework.app.ShuttleServiceType.isLocalBoundService"]},{"name":"fun isMessengerBoundService(): Boolean","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.isMessengerBoundService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/is-messenger-bound-service.html","searchKeys":["isMessengerBoundService","fun isMessengerBoundService(): Boolean","com.grarcht.shuttle.framework.app.ShuttleServiceType.isMessengerBoundService"]},{"name":"fun isNonBoundService(): Boolean","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.isNonBoundService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/is-non-bound-service.html","searchKeys":["isNonBoundService","fun isNonBoundService(): Boolean","com.grarcht.shuttle.framework.app.ShuttleServiceType.isNonBoundService"]},{"name":"fun logTag(tag: String?): ShuttleBundle","description":"com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.logTag","location":"framework/com.grarcht.shuttle.framework.content.bundle/-shuttle-bundle/log-tag.html","searchKeys":["logTag","fun logTag(tag: String?): ShuttleBundle","com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.logTag"]},{"name":"fun logTag(tag: String?): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.logTag","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/log-tag.html","searchKeys":["logTag","fun logTag(tag: String?): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.logTag"]},{"name":"fun transport(cargoId: String, serializable: Serializable?): ShuttleBundle","description":"com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.transport","location":"framework/com.grarcht.shuttle.framework.content.bundle/-shuttle-bundle/transport.html","searchKeys":["transport","fun transport(cargoId: String, serializable: Serializable?): ShuttleBundle","com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.transport"]},{"name":"fun valueOf(value: String): ShuttleServiceType","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.valueOf","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ShuttleServiceType","com.grarcht.shuttle.framework.app.ShuttleServiceType.valueOf"]},{"name":"fun values(): Array<ShuttleServiceType>","description":"com.grarcht.shuttle.framework.app.ShuttleServiceType.values","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-type/values.html","searchKeys":["values","fun values(): Array<ShuttleServiceType>","com.grarcht.shuttle.framework.app.ShuttleServiceType.values"]},{"name":"fun with(bundle: Bundle?, repository: ShuttleWarehouse, bundleFactory: BundleFactory? = DefaultBundleFactory()): ShuttleBundle","description":"com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.Companion.with","location":"framework/com.grarcht.shuttle.framework.content.bundle/-shuttle-bundle/-companion/with.html","searchKeys":["with","fun with(bundle: Bundle?, repository: ShuttleWarehouse, bundleFactory: BundleFactory? = DefaultBundleFactory()): ShuttleBundle","com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.Companion.with"]},{"name":"fun with(warehouse: ShuttleWarehouse, shuttleScreenFacade: ShuttleFacade? = null, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO): ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.Companion.with","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/-companion/with.html","searchKeys":["with","fun with(warehouse: ShuttleWarehouse, shuttleScreenFacade: ShuttleFacade? = null, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO): ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent.Companion.with"]},{"name":"interface BundleFactory","description":"com.grarcht.shuttle.framework.content.bundle.BundleFactory","location":"framework/com.grarcht.shuttle.framework.content.bundle/-bundle-factory/index.html","searchKeys":["BundleFactory","interface BundleFactory","com.grarcht.shuttle.framework.content.bundle.BundleFactory"]},{"name":"interface Shuttle","description":"com.grarcht.shuttle.framework.Shuttle","location":"framework/com.grarcht.shuttle.framework/-shuttle/index.html","searchKeys":["Shuttle","interface Shuttle","com.grarcht.shuttle.framework.Shuttle"]},{"name":"interface ShuttleDefaultError : ShuttleError","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-default-error/index.html","searchKeys":["ShuttleDefaultError","interface ShuttleDefaultError : ShuttleError","com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError"]},{"name":"interface ShuttleError : ShuttleVisibilityData","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-error/index.html","searchKeys":["ShuttleError","interface ShuttleError : ShuttleVisibilityData","com.grarcht.shuttle.framework.visibility.error.ShuttleError"]},{"name":"interface ShuttleFacade","description":"com.grarcht.shuttle.framework.screen.ShuttleFacade","location":"framework/com.grarcht.shuttle.framework.screen/-shuttle-facade/index.html","searchKeys":["ShuttleFacade","interface ShuttleFacade","com.grarcht.shuttle.framework.screen.ShuttleFacade"]},{"name":"interface ShuttleMessageReceiver","description":"com.grarcht.shuttle.framework.os.messenger.ShuttleMessageReceiver","location":"framework/com.grarcht.shuttle.framework.os.messenger/-shuttle-message-receiver/index.html","searchKeys":["ShuttleMessageReceiver","interface ShuttleMessageReceiver","com.grarcht.shuttle.framework.os.messenger.ShuttleMessageReceiver"]},{"name":"interface ShuttleMessengerFactory","description":"com.grarcht.shuttle.framework.os.messenger.factory.ShuttleMessengerFactory","location":"framework/com.grarcht.shuttle.framework.os.messenger.factory/-shuttle-messenger-factory/index.html","searchKeys":["ShuttleMessengerFactory","interface ShuttleMessengerFactory","com.grarcht.shuttle.framework.os.messenger.factory.ShuttleMessengerFactory"]},{"name":"interface ShuttleServiceConnectionFactory","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-factory/index.html","searchKeys":["ShuttleServiceConnectionFactory","interface ShuttleServiceConnectionFactory","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionFactory"]},{"name":"interface ShuttleServiceError : ShuttleError","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/index.html","searchKeys":["ShuttleServiceError","interface ShuttleServiceError : ShuttleError","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError"]},{"name":"interface ShuttleValidator<D>","description":"com.grarcht.shuttle.framework.validator.ShuttleValidator","location":"framework/com.grarcht.shuttle.framework.validator/-shuttle-validator/index.html","searchKeys":["ShuttleValidator","interface ShuttleValidator<D>","com.grarcht.shuttle.framework.validator.ShuttleValidator"]},{"name":"interface ShuttleVisibilityData","description":"com.grarcht.shuttle.framework.visibility.ShuttleVisibilityData","location":"framework/com.grarcht.shuttle.framework.visibility/-shuttle-visibility-data/index.html","searchKeys":["ShuttleVisibilityData","interface ShuttleVisibilityData","com.grarcht.shuttle.framework.visibility.ShuttleVisibilityData"]},{"name":"interface ShuttleVisibilityFeedback : ShuttleVisibilityData","description":"com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback","location":"framework/com.grarcht.shuttle.framework.visibility.information/-shuttle-visibility-feedback/index.html","searchKeys":["ShuttleVisibilityFeedback","interface ShuttleVisibilityFeedback : ShuttleVisibilityData","com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback"]},{"name":"interface ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-visibility-observable/index.html","searchKeys":["ShuttleVisibilityObservable","interface ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleVisibilityObservable"]},{"name":"interface ShuttleVisibilityReporter","description":"com.grarcht.shuttle.framework.visibility.ShuttleVisibilityReporter","location":"framework/com.grarcht.shuttle.framework.visibility/-shuttle-visibility-reporter/index.html","searchKeys":["ShuttleVisibilityReporter","interface ShuttleVisibilityReporter","com.grarcht.shuttle.framework.visibility.ShuttleVisibilityReporter"]},{"name":"interface ShuttleWarehouse","description":"com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-warehouse/index.html","searchKeys":["ShuttleWarehouse","interface ShuttleWarehouse","com.grarcht.shuttle.framework.warehouse.ShuttleWarehouse"]},{"name":"object CREATOR : Parcelable.Creator<ShuttleParcelCargo> ","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.CREATOR","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/-c-r-e-a-t-o-r/index.html","searchKeys":["CREATOR","object CREATOR : Parcelable.Creator<ShuttleParcelCargo> ","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.CREATOR"]},{"name":"object Companion","description":"com.grarcht.shuttle.framework.content.ShuttleIntent.Companion","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/-companion/index.html","searchKeys":["Companion","object Companion","com.grarcht.shuttle.framework.content.ShuttleIntent.Companion"]},{"name":"object Companion","description":"com.grarcht.shuttle.framework.content.bundle.SerializableParcelable.Companion","location":"framework/com.grarcht.shuttle.framework.content.bundle/-serializable-parcelable/-companion/index.html","searchKeys":["Companion","object Companion","com.grarcht.shuttle.framework.content.bundle.SerializableParcelable.Companion"]},{"name":"object Companion","description":"com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.Companion","location":"framework/com.grarcht.shuttle.framework.content.bundle/-shuttle-bundle/-companion/index.html","searchKeys":["Companion","object Companion","com.grarcht.shuttle.framework.content.bundle.ShuttleBundle.Companion"]},{"name":"object Companion","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Companion","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-companion/index.html","searchKeys":["Companion","object Companion","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Companion"]},{"name":"open class CargoShuttle(val shuttleFacade: ShuttleFacade, val shuttleWarehouse: ShuttleWarehouse, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO) : Shuttle","description":"com.grarcht.shuttle.framework.CargoShuttle","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/index.html","searchKeys":["CargoShuttle","open class CargoShuttle(val shuttleFacade: ShuttleFacade, val shuttleWarehouse: ShuttleWarehouse, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO) : Shuttle","com.grarcht.shuttle.framework.CargoShuttle"]},{"name":"open class DefaultBundleFactory : BundleFactory","description":"com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory","location":"framework/com.grarcht.shuttle.framework.content.bundle/-default-bundle-factory/index.html","searchKeys":["DefaultBundleFactory","open class DefaultBundleFactory : BundleFactory","com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory"]},{"name":"open class DoesNotExist(val cargoId: String) : ShuttleRemoveCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.DoesNotExist","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-does-not-exist/index.html","searchKeys":["DoesNotExist","open class DoesNotExist(val cargoId: String) : ShuttleRemoveCargoResult","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.DoesNotExist"]},{"name":"open class Error<T : Throwable>(val cargoId: String, val message: String? = null, val throwable: T? = null) : ShuttlePickupCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-error/index.html","searchKeys":["Error","open class Error<T : Throwable>(val cargoId: String, val message: String? = null, val throwable: T? = null) : ShuttlePickupCargoResult","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error"]},{"name":"open class Error<T : Throwable>(val cargoId: String, val message: String? = null, val throwable: T? = null) : ShuttleStoreCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-error/index.html","searchKeys":["Error","open class Error<T : Throwable>(val cargoId: String, val message: String? = null, val throwable: T? = null) : ShuttleStoreCargoResult","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error"]},{"name":"open class Loading(val cargoId: String) : ShuttlePickupCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Loading","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-loading/index.html","searchKeys":["Loading","open class Loading(val cargoId: String) : ShuttlePickupCargoResult","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Loading"]},{"name":"open class NotRemovingCargoYet(val cargoId: String) : ShuttleRemoveCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.NotRemovingCargoYet","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-not-removing-cargo-yet/index.html","searchKeys":["NotRemovingCargoYet","open class NotRemovingCargoYet(val cargoId: String) : ShuttleRemoveCargoResult","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.NotRemovingCargoYet"]},{"name":"open class Removed(val cargoId: String) : ShuttleRemoveCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removed","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-removed/index.html","searchKeys":["Removed","open class Removed(val cargoId: String) : ShuttleRemoveCargoResult","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removed"]},{"name":"open class ShuttleBundle(repository: ShuttleWarehouse, internalBundle: Bundle?, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"com.grarcht.shuttle.framework.content.bundle.ShuttleBundle","location":"framework/com.grarcht.shuttle.framework.content.bundle/-shuttle-bundle/index.html","searchKeys":["ShuttleBundle","open class ShuttleBundle(repository: ShuttleWarehouse, internalBundle: Bundle?, backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO)","com.grarcht.shuttle.framework.content.bundle.ShuttleBundle"]},{"name":"open class ShuttleCargoFacade(application: Application, shuttleWarehouse: ShuttleWarehouse, handler: Handler? = Handler(Looper.getMainLooper()), backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO) : ShuttleFacade","description":"com.grarcht.shuttle.framework.screen.ShuttleCargoFacade","location":"framework/com.grarcht.shuttle.framework.screen/-shuttle-cargo-facade/index.html","searchKeys":["ShuttleCargoFacade","open class ShuttleCargoFacade(application: Application, shuttleWarehouse: ShuttleWarehouse, handler: Handler? = Handler(Looper.getMainLooper()), backgroundThreadDispatcher: CoroutineDispatcher = Dispatchers.IO) : ShuttleFacade","com.grarcht.shuttle.framework.screen.ShuttleCargoFacade"]},{"name":"open class ShuttleChannelVisibilityObservable(reporter: ShuttleVisibilityReporter, coroutineScope: CoroutineScope) : ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-channel-visibility-observable/index.html","searchKeys":["ShuttleChannelVisibilityObservable","open class ShuttleChannelVisibilityObservable(reporter: ShuttleVisibilityReporter, coroutineScope: CoroutineScope) : ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable"]},{"name":"open class ShuttleIntent","description":"com.grarcht.shuttle.framework.content.ShuttleIntent","location":"framework/com.grarcht.shuttle.framework.content/-shuttle-intent/index.html","searchKeys":["ShuttleIntent","open class ShuttleIntent","com.grarcht.shuttle.framework.content.ShuttleIntent"]},{"name":"open class ShuttleMessengerDecorator(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, visibilityObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>)","description":"com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator","location":"framework/com.grarcht.shuttle.framework.os.messenger/-shuttle-messenger-decorator/index.html","searchKeys":["ShuttleMessengerDecorator","open class ShuttleMessengerDecorator(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, visibilityObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>)","com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator"]},{"name":"open class ShuttleParcelCargo(val cargoId: String) : Parcelable","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/index.html","searchKeys":["ShuttleParcelCargo","open class ShuttleParcelCargo(val cargoId: String) : Parcelable","com.grarcht.shuttle.framework.model.ShuttleParcelCargo"]},{"name":"open class ShuttleRepository(shuttleDao: ShuttleDataAccessObject, shuttleDataModelFactory: ShuttleDataModelFactory, appFileDirectoryPath: String, shuttleFileSystemGateway: ShuttleFileSystemGateway) : ShuttleWarehouse","description":"com.grarcht.shuttle.framework.warehouse.ShuttleRepository","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-repository/index.html","searchKeys":["ShuttleRepository","open class ShuttleRepository(shuttleDao: ShuttleDataAccessObject, shuttleDataModelFactory: ShuttleDataModelFactory, appFileDirectoryPath: String, shuttleFileSystemGateway: ShuttleFileSystemGateway) : ShuttleWarehouse","com.grarcht.shuttle.framework.warehouse.ShuttleRepository"]},{"name":"open class ShuttleService : Service, ShuttleMessageReceiver","description":"com.grarcht.shuttle.framework.app.ShuttleService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/index.html","searchKeys":["ShuttleService","open class ShuttleService : Service, ShuttleMessageReceiver","com.grarcht.shuttle.framework.app.ShuttleService"]},{"name":"open class ShuttleServiceConnection<S : ShuttleService, B : ShuttleBinder<S>>(config: ShuttleServiceConnectionConfig<S>) : ServiceConnection","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/index.html","searchKeys":["ShuttleServiceConnection","open class ShuttleServiceConnection<S : ShuttleService, B : ShuttleBinder<S>>(config: ShuttleServiceConnectionConfig<S>) : ServiceConnection","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection"]},{"name":"open class Success(val cargoId: String) : ShuttleStoreCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Success","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-success/index.html","searchKeys":["Success","open class Success(val cargoId: String) : ShuttleStoreCargoResult","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Success"]},{"name":"open class Success<D>(val data: D) : ShuttlePickupCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Success","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-success/index.html","searchKeys":["Success","open class Success<D>(val data: D) : ShuttlePickupCargoResult","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Success"]},{"name":"open class UnableToRemove<T : Throwable>(val cargoId: String, val message: String? = null, val throwable: T? = null) : ShuttleRemoveCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-unable-to-remove/index.html","searchKeys":["UnableToRemove","open class UnableToRemove<T : Throwable>(val cargoId: String, val message: String? = null, val throwable: T? = null) : ShuttleRemoveCargoResult","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove"]},{"name":"open fun <D : Serializable> getCargoIntentForTransport(cargoId: String, cargo: D?): Intent","description":"com.grarcht.shuttle.framework.app.ShuttleService.getCargoIntentForTransport","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/get-cargo-intent-for-transport.html","searchKeys":["getCargoIntentForTransport","open fun <D : Serializable> getCargoIntentForTransport(cargoId: String, cargo: D?): Intent","com.grarcht.shuttle.framework.app.ShuttleService.getCargoIntentForTransport"]},{"name":"open fun <D : Serializable> transportCargoWithShuttle(cargoId: String, cargo: D?)","description":"com.grarcht.shuttle.framework.app.ShuttleService.transportCargoWithShuttle","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/transport-cargo-with-shuttle.html","searchKeys":["transportCargoWithShuttle","open fun <D : Serializable> transportCargoWithShuttle(cargoId: String, cargo: D?)","com.grarcht.shuttle.framework.app.ShuttleService.transportCargoWithShuttle"]},{"name":"open fun connectToService(serviceClazz: Class<S>): ShuttleServiceConnection<S, ShuttleBinder<S>>","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.connectToService","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/connect-to-service.html","searchKeys":["connectToService","open fun connectToService(serviceClazz: Class<S>): ShuttleServiceConnection<S, ShuttleBinder<S>>","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.connectToService"]},{"name":"open fun connectToService(serviceClazz: Class<S>, lifecycle: Lifecycle?): ShuttleServiceConnection<S, ShuttleBinder<S>>","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.connectToService","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/connect-to-service.html","searchKeys":["connectToService","open fun connectToService(serviceClazz: Class<S>, lifecycle: Lifecycle?): ShuttleServiceConnection<S, ShuttleBinder<S>>","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.connectToService"]},{"name":"open fun createBinderForLocalBoundService(): ShuttleBinder<ShuttleService>?","description":"com.grarcht.shuttle.framework.app.ShuttleService.createBinderForLocalBoundService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/create-binder-for-local-bound-service.html","searchKeys":["createBinderForLocalBoundService","open fun createBinderForLocalBoundService(): ShuttleBinder<ShuttleService>?","com.grarcht.shuttle.framework.app.ShuttleService.createBinderForLocalBoundService"]},{"name":"open fun createMessengerDecoratorForIPC(): IBinder?","description":"com.grarcht.shuttle.framework.app.ShuttleService.createMessengerDecoratorForIPC","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/create-messenger-decorator-for-i-p-c.html","searchKeys":["createMessengerDecoratorForIPC","open fun createMessengerDecoratorForIPC(): IBinder?","com.grarcht.shuttle.framework.app.ShuttleService.createMessengerDecoratorForIPC"]},{"name":"open fun disconnectFromService()","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.disconnectFromService","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/disconnect-from-service.html","searchKeys":["disconnectFromService","open fun disconnectFromService()","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.disconnectFromService"]},{"name":"open fun getServiceName(): String","description":"com.grarcht.shuttle.framework.app.ShuttleService.getServiceName","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/get-service-name.html","searchKeys":["getServiceName","open fun getServiceName(): String","com.grarcht.shuttle.framework.app.ShuttleService.getServiceName"]},{"name":"open fun releaseResourcesForIPCServices()","description":"com.grarcht.shuttle.framework.app.ShuttleService.releaseResourcesForIPCServices","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/release-resources-for-i-p-c-services.html","searchKeys":["releaseResourcesForIPCServices","open fun releaseResourcesForIPCServices()","com.grarcht.shuttle.framework.app.ShuttleService.releaseResourcesForIPCServices"]},{"name":"open fun releaseResourcesForLocalServices()","description":"com.grarcht.shuttle.framework.app.ShuttleService.releaseResourcesForLocalServices","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/release-resources-for-local-services.html","searchKeys":["releaseResourcesForLocalServices","open fun releaseResourcesForLocalServices()","com.grarcht.shuttle.framework.app.ShuttleService.releaseResourcesForLocalServices"]},{"name":"open lateinit var config: ShuttleServiceConfig","description":"com.grarcht.shuttle.framework.app.ShuttleService.config","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/config.html","searchKeys":["config","open lateinit var config: ShuttleServiceConfig","com.grarcht.shuttle.framework.app.ShuttleService.config"]},{"name":"open override fun <E : ShuttleVisibilityData> observe(visibilityData: E): ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.observe","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-channel-visibility-observable/observe.html","searchKeys":["observe","open override fun <E : ShuttleVisibilityData> observe(visibilityData: E): ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.observe"]},{"name":"open override fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleLifecycleAwareServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createLifecycleAwareServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/create-lifecycle-aware-service-connection.html","searchKeys":["createLifecycleAwareServiceConnection","open override fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleLifecycleAwareServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createLifecycleAwareServiceConnection"]},{"name":"open override fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createLifecycleAwareServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/create-lifecycle-aware-service-connection.html","searchKeys":["createLifecycleAwareServiceConnection","open override fun <S : ShuttleService, B : ShuttleBinder<S>> createLifecycleAwareServiceConnection(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createLifecycleAwareServiceConnection"]},{"name":"open override fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(config: ShuttleServiceConnectionConfig<S>): ShuttleServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/create-service-connection.html","searchKeys":["createServiceConnection","open override fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(config: ShuttleServiceConnectionConfig<S>): ShuttleServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnection"]},{"name":"open override fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnection<S, B>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnection","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/create-service-connection.html","searchKeys":["createServiceConnection","open override fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnection(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnection<S, B>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnection"]},{"name":"open override fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnectionConfig(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleServiceConnectionConfig<S>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/create-service-connection-config.html","searchKeys":["createServiceConnectionConfig","open override fun <S : ShuttleService, B : ShuttleBinder<S>> createServiceConnectionConfig(config: ShuttleLifecycleAwareServiceConnectionConfig<S>): ShuttleServiceConnectionConfig<S>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnectionConfig"]},{"name":"open override fun <S : ShuttleService> createLifecycleAwareServiceConnectionConfig(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnectionConfig<S>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createLifecycleAwareServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/create-lifecycle-aware-service-connection-config.html","searchKeys":["createLifecycleAwareServiceConnectionConfig","open override fun <S : ShuttleService> createLifecycleAwareServiceConnectionConfig(context: Context?, serviceClazz: Class<S>, lifecycle: Lifecycle, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleLifecycleAwareServiceConnectionConfig<S>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createLifecycleAwareServiceConnectionConfig"]},{"name":"open override fun <S : ShuttleService> createServiceConnectionConfig(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnectionConfig<S>","description":"com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnectionConfig","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.factory/-shuttle-service-connection-types-factory/create-service-connection-config.html","searchKeys":["createServiceConnectionConfig","open override fun <S : ShuttleService> createServiceConnectionConfig(context: Context?, serviceName: String, errorObservable: ShuttleVisibilityObservable, useWithIPC: Boolean, coroutineScope: CoroutineScope, serviceChannel: Channel<ShuttleConnectedServiceModel<S>>): ShuttleServiceConnectionConfig<S>","com.grarcht.shuttle.framework.content.serviceconnection.factory.ShuttleServiceConnectionTypesFactory.createServiceConnectionConfig"]},{"name":"open override fun add(channel: Channel<ShuttleVisibilityData>): ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.add","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-channel-visibility-observable/add.html","searchKeys":["add","open override fun add(channel: Channel<ShuttleVisibilityData>): ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.add"]},{"name":"open override fun bundleCargoWith(bundle: Bundle?, bundleFactory: BundleFactory?): ShuttleBundle","description":"com.grarcht.shuttle.framework.CargoShuttle.bundleCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/bundle-cargo-with.html","searchKeys":["bundleCargoWith","open override fun bundleCargoWith(bundle: Bundle?, bundleFactory: BundleFactory?): ShuttleBundle","com.grarcht.shuttle.framework.CargoShuttle.bundleCargoWith"]},{"name":"open override fun cleanShuttleFromAllDeliveries(receiver: Channel<ShuttleRemoveCargoResult>?): Shuttle","description":"com.grarcht.shuttle.framework.CargoShuttle.cleanShuttleFromAllDeliveries","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/clean-shuttle-from-all-deliveries.html","searchKeys":["cleanShuttleFromAllDeliveries","open override fun cleanShuttleFromAllDeliveries(receiver: Channel<ShuttleRemoveCargoResult>?): Shuttle","com.grarcht.shuttle.framework.CargoShuttle.cleanShuttleFromAllDeliveries"]},{"name":"open override fun cleanShuttleFromDeliveryFor(cargoId: String, receiver: Channel<ShuttleRemoveCargoResult>?): Shuttle","description":"com.grarcht.shuttle.framework.CargoShuttle.cleanShuttleFromDeliveryFor","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/clean-shuttle-from-delivery-for.html","searchKeys":["cleanShuttleFromDeliveryFor","open override fun cleanShuttleFromDeliveryFor(cargoId: String, receiver: Channel<ShuttleRemoveCargoResult>?): Shuttle","com.grarcht.shuttle.framework.CargoShuttle.cleanShuttleFromDeliveryFor"]},{"name":"open override fun cleanShuttleOnReturnTo(currentScreen: Class<*>, nextScreenClass: Class<*>, cargoId: String): Shuttle","description":"com.grarcht.shuttle.framework.CargoShuttle.cleanShuttleOnReturnTo","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/clean-shuttle-on-return-to.html","searchKeys":["cleanShuttleOnReturnTo","open override fun cleanShuttleOnReturnTo(currentScreen: Class<*>, nextScreenClass: Class<*>, cargoId: String): Shuttle","com.grarcht.shuttle.framework.CargoShuttle.cleanShuttleOnReturnTo"]},{"name":"open override fun create(): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-default-bundle-factory/create.html","searchKeys":["create","open override fun create(): Bundle","com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create"]},{"name":"open override fun create(bundle: Bundle): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-default-bundle-factory/create.html","searchKeys":["create","open override fun create(bundle: Bundle): Bundle","com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create"]},{"name":"open override fun create(bundle: PersistableBundle): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-default-bundle-factory/create.html","searchKeys":["create","open override fun create(bundle: PersistableBundle): Bundle","com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create"]},{"name":"open override fun create(capacity: Int): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-default-bundle-factory/create.html","searchKeys":["create","open override fun create(capacity: Int): Bundle","com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create"]},{"name":"open override fun create(loader: ClassLoader?): Bundle","description":"com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create","location":"framework/com.grarcht.shuttle.framework.content.bundle/-default-bundle-factory/create.html","searchKeys":["create","open override fun create(loader: ClassLoader?): Bundle","com.grarcht.shuttle.framework.content.bundle.DefaultBundleFactory.create"]},{"name":"open override fun createFromParcel(parcel: Parcel): ShuttleParcelCargo","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.CREATOR.createFromParcel","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/-c-r-e-a-t-o-r/create-from-parcel.html","searchKeys":["createFromParcel","open override fun createFromParcel(parcel: Parcel): ShuttleParcelCargo","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.CREATOR.createFromParcel"]},{"name":"open override fun createMessenger(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, errorObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>): ShuttleMessengerDecorator","description":"com.grarcht.shuttle.framework.os.messenger.factory.ShuttleServiceMessengerFactory.createMessenger","location":"framework/com.grarcht.shuttle.framework.os.messenger.factory/-shuttle-service-messenger-factory/create-messenger.html","searchKeys":["createMessenger","open override fun createMessenger(looper: Looper, serviceName: String, messageReceiver: ShuttleMessageReceiver, errorObservable: ShuttleVisibilityObservable, messageValidator: ShuttleValidator<Message>): ShuttleMessengerDecorator","com.grarcht.shuttle.framework.os.messenger.factory.ShuttleServiceMessengerFactory.createMessenger"]},{"name":"open override fun describeContents(): Int","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.describeContents","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/describe-contents.html","searchKeys":["describeContents","open override fun describeContents(): Int","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.describeContents"]},{"name":"open override fun dispose(): ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.dispose","location":"framework/com.grarcht.shuttle.framework.visibility.observation/-shuttle-channel-visibility-observable/dispose.html","searchKeys":["dispose","open override fun dispose(): ShuttleVisibilityObservable","com.grarcht.shuttle.framework.visibility.observation.ShuttleChannelVisibilityObservable.dispose"]},{"name":"open override fun intentCargoWith(action: String): ShuttleIntent","description":"com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","open override fun intentCargoWith(action: String): ShuttleIntent","com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith"]},{"name":"open override fun intentCargoWith(action: String, uri: Uri): ShuttleIntent","description":"com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","open override fun intentCargoWith(action: String, uri: Uri): ShuttleIntent","com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith"]},{"name":"open override fun intentCargoWith(action: String, uri: Uri, packageContext: Context, cls: Class<*>): ShuttleIntent","description":"com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","open override fun intentCargoWith(action: String, uri: Uri, packageContext: Context, cls: Class<*>): ShuttleIntent","com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith"]},{"name":"open override fun intentCargoWith(intent: Intent): ShuttleIntent","description":"com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","open override fun intentCargoWith(intent: Intent): ShuttleIntent","com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith"]},{"name":"open override fun intentCargoWith(packageContext: Context, cls: Class<*>): ShuttleIntent","description":"com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/intent-cargo-with.html","searchKeys":["intentCargoWith","open override fun intentCargoWith(packageContext: Context, cls: Class<*>): ShuttleIntent","com.grarcht.shuttle.framework.CargoShuttle.intentCargoWith"]},{"name":"open override fun intentChooserCargoWith(target: Intent, title: CharSequence?): ShuttleIntent","description":"com.grarcht.shuttle.framework.CargoShuttle.intentChooserCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/intent-chooser-cargo-with.html","searchKeys":["intentChooserCargoWith","open override fun intentChooserCargoWith(target: Intent, title: CharSequence?): ShuttleIntent","com.grarcht.shuttle.framework.CargoShuttle.intentChooserCargoWith"]},{"name":"open override fun intentChooserCargoWith(target: Intent?, title: CharSequence?, sender: IntentSender?): ShuttleIntent","description":"com.grarcht.shuttle.framework.CargoShuttle.intentChooserCargoWith","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/intent-chooser-cargo-with.html","searchKeys":["intentChooserCargoWith","open override fun intentChooserCargoWith(target: Intent?, title: CharSequence?, sender: IntentSender?): ShuttleIntent","com.grarcht.shuttle.framework.CargoShuttle.intentChooserCargoWith"]},{"name":"open override fun newArray(size: Int): Array<ShuttleParcelCargo?>","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.CREATOR.newArray","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/-c-r-e-a-t-o-r/new-array.html","searchKeys":["newArray","open override fun newArray(size: Int): Array<ShuttleParcelCargo?>","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.CREATOR.newArray"]},{"name":"open override fun onBind(intent: Intent?): IBinder?","description":"com.grarcht.shuttle.framework.app.ShuttleService.onBind","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/on-bind.html","searchKeys":["onBind","open override fun onBind(intent: Intent?): IBinder?","com.grarcht.shuttle.framework.app.ShuttleService.onBind"]},{"name":"open override fun onDestroy()","description":"com.grarcht.shuttle.framework.app.ShuttleService.onDestroy","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy()","com.grarcht.shuttle.framework.app.ShuttleService.onDestroy"]},{"name":"open override fun onDestroy(owner: LifecycleOwner)","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.onDestroy","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy(owner: LifecycleOwner)","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.onDestroy"]},{"name":"open override fun onRebind(intent: Intent?)","description":"com.grarcht.shuttle.framework.app.ShuttleService.onRebind","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/on-rebind.html","searchKeys":["onRebind","open override fun onRebind(intent: Intent?)","com.grarcht.shuttle.framework.app.ShuttleService.onRebind"]},{"name":"open override fun onReceiveMessage(messageWhat: Int, msg: Message)","description":"com.grarcht.shuttle.framework.app.ShuttleService.onReceiveMessage","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/on-receive-message.html","searchKeys":["onReceiveMessage","open override fun onReceiveMessage(messageWhat: Int, msg: Message)","com.grarcht.shuttle.framework.app.ShuttleService.onReceiveMessage"]},{"name":"open override fun onServiceConnected(componentName: ComponentName?, service: IBinder?)","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.onServiceConnected","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/on-service-connected.html","searchKeys":["onServiceConnected","open override fun onServiceConnected(componentName: ComponentName?, service: IBinder?)","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.onServiceConnected"]},{"name":"open override fun onServiceDisconnected(componentName: ComponentName?)","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.onServiceDisconnected","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/on-service-disconnected.html","searchKeys":["onServiceDisconnected","open override fun onServiceDisconnected(componentName: ComponentName?)","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.onServiceDisconnected"]},{"name":"open override fun onStart(owner: LifecycleOwner)","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.onStart","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection/on-start.html","searchKeys":["onStart","open override fun onStart(owner: LifecycleOwner)","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.onStart"]},{"name":"open override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int","description":"com.grarcht.shuttle.framework.app.ShuttleService.onStartCommand","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/on-start-command.html","searchKeys":["onStartCommand","open override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int","com.grarcht.shuttle.framework.app.ShuttleService.onStartCommand"]},{"name":"open override fun onStop(owner: LifecycleOwner)","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.onStop","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection/on-stop.html","searchKeys":["onStop","open override fun onStop(owner: LifecycleOwner)","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnection.onStop"]},{"name":"open override fun onUnbind(intent: Intent?): Boolean","description":"com.grarcht.shuttle.framework.app.ShuttleService.onUnbind","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/on-unbind.html","searchKeys":["onUnbind","open override fun onUnbind(intent: Intent?): Boolean","com.grarcht.shuttle.framework.app.ShuttleService.onUnbind"]},{"name":"open override fun removeCargoAfterDelivery(currentScreenClass: Class<*>, nextScreenClass: Class<*>, cargoId: String)","description":"com.grarcht.shuttle.framework.screen.ShuttleCargoFacade.removeCargoAfterDelivery","location":"framework/com.grarcht.shuttle.framework.screen/-shuttle-cargo-facade/remove-cargo-after-delivery.html","searchKeys":["removeCargoAfterDelivery","open override fun removeCargoAfterDelivery(currentScreenClass: Class<*>, nextScreenClass: Class<*>, cargoId: String)","com.grarcht.shuttle.framework.screen.ShuttleCargoFacade.removeCargoAfterDelivery"]},{"name":"open override fun validate(data: Message): Boolean","description":"com.grarcht.shuttle.framework.validator.ShuttleServiceMessageValidator.validate","location":"framework/com.grarcht.shuttle.framework.validator/-shuttle-service-message-validator/validate.html","searchKeys":["validate","open override fun validate(data: Message): Boolean","com.grarcht.shuttle.framework.validator.ShuttleServiceMessageValidator.validate"]},{"name":"open override fun writeToParcel(parcel: Parcel, flags: Int)","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.writeToParcel","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(parcel: Parcel, flags: Int)","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.writeToParcel"]},{"name":"open override val shuttleFacade: ShuttleFacade","description":"com.grarcht.shuttle.framework.CargoShuttle.shuttleFacade","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/shuttle-facade.html","searchKeys":["shuttleFacade","open override val shuttleFacade: ShuttleFacade","com.grarcht.shuttle.framework.CargoShuttle.shuttleFacade"]},{"name":"open override val shuttleWarehouse: ShuttleWarehouse","description":"com.grarcht.shuttle.framework.CargoShuttle.shuttleWarehouse","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/shuttle-warehouse.html","searchKeys":["shuttleWarehouse","open override val shuttleWarehouse: ShuttleWarehouse","com.grarcht.shuttle.framework.CargoShuttle.shuttleWarehouse"]},{"name":"open suspend override fun <D : Serializable> pickup(cargoId: String): Channel<ShuttlePickupCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleRepository.pickup","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-repository/pickup.html","searchKeys":["pickup","open suspend override fun <D : Serializable> pickup(cargoId: String): Channel<ShuttlePickupCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleRepository.pickup"]},{"name":"open suspend override fun <D : Serializable> pickupCargo(cargoId: String): Channel<ShuttlePickupCargoResult>","description":"com.grarcht.shuttle.framework.CargoShuttle.pickupCargo","location":"framework/com.grarcht.shuttle.framework/-cargo-shuttle/pickup-cargo.html","searchKeys":["pickupCargo","open suspend override fun <D : Serializable> pickupCargo(cargoId: String): Channel<ShuttlePickupCargoResult>","com.grarcht.shuttle.framework.CargoShuttle.pickupCargo"]},{"name":"open suspend override fun <D : Serializable> store(cargoId: String, data: D?): Channel<ShuttleStoreCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleRepository.store","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-repository/store.html","searchKeys":["store","open suspend override fun <D : Serializable> store(cargoId: String, data: D?): Channel<ShuttleStoreCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleRepository.store"]},{"name":"open suspend override fun removeAllCargo(): Channel<ShuttleRemoveCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleRepository.removeAllCargo","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-repository/remove-all-cargo.html","searchKeys":["removeAllCargo","open suspend override fun removeAllCargo(): Channel<ShuttleRemoveCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleRepository.removeAllCargo"]},{"name":"open suspend override fun removeCargoBy(cargoId: String): Channel<ShuttleRemoveCargoResult>","description":"com.grarcht.shuttle.framework.warehouse.ShuttleRepository.removeCargoBy","location":"framework/com.grarcht.shuttle.framework.warehouse/-shuttle-repository/remove-cargo-by.html","searchKeys":["removeCargoBy","open suspend override fun removeCargoBy(cargoId: String): Channel<ShuttleRemoveCargoResult>","com.grarcht.shuttle.framework.warehouse.ShuttleRepository.removeCargoBy"]},{"name":"open var binder: ShuttleBinder<ShuttleService>?","description":"com.grarcht.shuttle.framework.app.ShuttleService.binder","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/binder.html","searchKeys":["binder","open var binder: ShuttleBinder<ShuttleService>?","com.grarcht.shuttle.framework.app.ShuttleService.binder"]},{"name":"open var ipcServiceMessengerDecorator: ShuttleMessengerDecorator?","description":"com.grarcht.shuttle.framework.app.ShuttleService.ipcServiceMessengerDecorator","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service/ipc-service-messenger-decorator.html","searchKeys":["ipcServiceMessengerDecorator","open var ipcServiceMessengerDecorator: ShuttleMessengerDecorator?","com.grarcht.shuttle.framework.app.ShuttleService.ipcServiceMessengerDecorator"]},{"name":"sealed class ShuttlePickupCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/index.html","searchKeys":["ShuttlePickupCargoResult","sealed class ShuttlePickupCargoResult","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult"]},{"name":"sealed class ShuttleRemoveCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/index.html","searchKeys":["ShuttleRemoveCargoResult","sealed class ShuttleRemoveCargoResult","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult"]},{"name":"sealed class ShuttleStoreCargoResult","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/index.html","searchKeys":["ShuttleStoreCargoResult","sealed class ShuttleStoreCargoResult","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult"]},{"name":"suspend fun <E> Channel<E>?.relayFlowIfAvailable(receiver: Channel<E>? = null, logTag: String? = null)","description":"com.grarcht.shuttle.framework.coroutines.channel.relayFlowIfAvailable","location":"framework/com.grarcht.shuttle.framework.coroutines.channel/relay-flow-if-available.html","searchKeys":["relayFlowIfAvailable","suspend fun <E> Channel<E>?.relayFlowIfAvailable(receiver: Channel<E>? = null, logTag: String? = null)","com.grarcht.shuttle.framework.coroutines.channel.relayFlowIfAvailable"]},{"name":"val bindingType: ShuttleServiceType","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.bindingType","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/binding-type.html","searchKeys":["bindingType","val bindingType: ShuttleServiceType","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.bindingType"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.model.ShuttleParcelCargo.cargoId","location":"framework/com.grarcht.shuttle.framework.model/-shuttle-parcel-cargo/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.model.ShuttleParcelCargo.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-error/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Loading.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-loading/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Loading.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.DoesNotExist.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-does-not-exist/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.DoesNotExist.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.NotRemovingCargoYet.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-not-removing-cargo-yet/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.NotRemovingCargoYet.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removed.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-removed/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removed.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removing.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-removing/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.Removing.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-unable-to-remove/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-error/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.NotStoringCargoYet.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-not-storing-cargo-yet/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.NotStoringCargoYet.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Storing.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-storing/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Storing.cargoId"]},{"name":"val cargoId: String","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Success.cargoId","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-success/cargo-id.html","searchKeys":["cargoId","val cargoId: String","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Success.cargoId"]},{"name":"val cargoIds: MutableList<String>","description":"com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.cargoIds","location":"framework/com.grarcht.shuttle.framework.os.messenger/-shuttle-messenger-decorator/cargo-ids.html","searchKeys":["cargoIds","val cargoIds: MutableList<String>","com.grarcht.shuttle.framework.os.messenger.ShuttleMessengerDecorator.cargoIds"]},{"name":"val context: Context?","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.context","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/context.html","searchKeys":["context","val context: Context?","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.context"]},{"name":"val context: Context?","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.context","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/context.html","searchKeys":["context","val context: Context?","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.context"]},{"name":"val context: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.context","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-default-error/-observed-error/context.html","searchKeys":["context","val context: String","com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.context"]},{"name":"val context: String","description":"com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.context","location":"framework/com.grarcht.shuttle.framework.visibility.information/-shuttle-visibility-feedback/-information/context.html","searchKeys":["context","val context: String","com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.context"]},{"name":"val coroutineScope: CoroutineScope","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.coroutineScope","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: CoroutineScope","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.coroutineScope"]},{"name":"val coroutineScope: CoroutineScope","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.coroutineScope","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: CoroutineScope","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.coroutineScope"]},{"name":"val data: D","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Success.data","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-success/data.html","searchKeys":["data","val data: D","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Success.data"]},{"name":"val data: D? = null","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.data","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-connect-to-service-error/data.html","searchKeys":["data","val data: D? = null","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.data"]},{"name":"val data: D? = null","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.data","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-disconnect-from-service-error/data.html","searchKeys":["data","val data: D? = null","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.data"]},{"name":"val data: D? = null","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.data","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-general-error/data.html","searchKeys":["data","val data: D? = null","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.data"]},{"name":"val data: D? = null","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.data","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-handle-message-error/data.html","searchKeys":["data","val data: D? = null","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.data"]},{"name":"val data: D? = null","description":"com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.data","location":"framework/com.grarcht.shuttle.framework.visibility.information/-shuttle-visibility-feedback/-information/data.html","searchKeys":["data","val data: D? = null","com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.data"]},{"name":"val error: Throwable","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.error","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-default-error/-observed-error/error.html","searchKeys":["error","val error: Throwable","com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.error"]},{"name":"val error: Throwable","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.error","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-connect-to-service-error/error.html","searchKeys":["error","val error: Throwable","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.error"]},{"name":"val error: Throwable","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.error","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-disconnect-from-service-error/error.html","searchKeys":["error","val error: Throwable","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.error"]},{"name":"val error: Throwable","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.error","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-general-error/error.html","searchKeys":["error","val error: Throwable","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.error"]},{"name":"val error: Throwable","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.error","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-handle-message-error/error.html","searchKeys":["error","val error: Throwable","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.error"]},{"name":"val errorMessage: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.errorMessage","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-default-error/-observed-error/error-message.html","searchKeys":["errorMessage","val errorMessage: String","com.grarcht.shuttle.framework.visibility.error.ShuttleDefaultError.ObservedError.errorMessage"]},{"name":"val errorMessage: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.errorMessage","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-connect-to-service-error/error-message.html","searchKeys":["errorMessage","val errorMessage: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.errorMessage"]},{"name":"val errorMessage: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.errorMessage","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-disconnect-from-service-error/error-message.html","searchKeys":["errorMessage","val errorMessage: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.errorMessage"]},{"name":"val errorMessage: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.errorMessage","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-general-error/error-message.html","searchKeys":["errorMessage","val errorMessage: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.errorMessage"]},{"name":"val errorMessage: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.errorMessage","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-handle-message-error/error-message.html","searchKeys":["errorMessage","val errorMessage: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.errorMessage"]},{"name":"val errorObservable: ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.errorObservable","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/error-observable.html","searchKeys":["errorObservable","val errorObservable: ShuttleVisibilityObservable","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.errorObservable"]},{"name":"val errorObservable: ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.errorObservable","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/error-observable.html","searchKeys":["errorObservable","val errorObservable: ShuttleVisibilityObservable","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.errorObservable"]},{"name":"val errorObservable: ShuttleVisibilityObservable","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.errorObservable","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/error-observable.html","searchKeys":["errorObservable","val errorObservable: ShuttleVisibilityObservable","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.errorObservable"]},{"name":"val lifecycle: Lifecycle","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.lifecycle","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/lifecycle.html","searchKeys":["lifecycle","val lifecycle: Lifecycle","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.lifecycle"]},{"name":"val message: String","description":"com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.message","location":"framework/com.grarcht.shuttle.framework.visibility.information/-shuttle-visibility-feedback/-information/message.html","searchKeys":["message","val message: String","com.grarcht.shuttle.framework.visibility.information.ShuttleVisibilityFeedback.Information.message"]},{"name":"val message: String? = null","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.message","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-error/message.html","searchKeys":["message","val message: String? = null","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.message"]},{"name":"val message: String? = null","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.message","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-unable-to-remove/message.html","searchKeys":["message","val message: String? = null","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.message"]},{"name":"val message: String? = null","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.message","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-error/message.html","searchKeys":["message","val message: String? = null","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.message"]},{"name":"val messageValidator: ShuttleValidator<Message>","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.messageValidator","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/message-validator.html","searchKeys":["messageValidator","val messageValidator: ShuttleValidator<Message>","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.messageValidator"]},{"name":"val messengerFactory: ShuttleMessengerFactory","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.messengerFactory","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/messenger-factory.html","searchKeys":["messengerFactory","val messengerFactory: ShuttleMessengerFactory","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.messengerFactory"]},{"name":"val parcelable: Parcelable","description":"com.grarcht.shuttle.framework.content.bundle.SerializableParcelable.parcelable","location":"framework/com.grarcht.shuttle.framework.content.bundle/-serializable-parcelable/parcelable.html","searchKeys":["parcelable","val parcelable: Parcelable","com.grarcht.shuttle.framework.content.bundle.SerializableParcelable.parcelable"]},{"name":"val rebindOnUnbind: Boolean = false","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.rebindOnUnbind","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/rebind-on-unbind.html","searchKeys":["rebindOnUnbind","val rebindOnUnbind: Boolean = false","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.rebindOnUnbind"]},{"name":"val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.serviceChannel","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/service-channel.html","searchKeys":["serviceChannel","val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.serviceChannel"]},{"name":"val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceChannel","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/service-channel.html","searchKeys":["serviceChannel","val serviceChannel: Channel<ShuttleConnectedServiceModel<S>>","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceChannel"]},{"name":"val serviceClazz: Class<S>","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceClazz","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/service-clazz.html","searchKeys":["serviceClazz","val serviceClazz: Class<S>","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceClazz"]},{"name":"val serviceConnectionFactory: ShuttleServiceConnectionFactory","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceConnectionFactory","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/service-connection-factory.html","searchKeys":["serviceConnectionFactory","val serviceConnectionFactory: ShuttleServiceConnectionFactory","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceConnectionFactory"]},{"name":"val serviceName: String","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.serviceName","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/service-name.html","searchKeys":["serviceName","val serviceName: String","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.serviceName"]},{"name":"val serviceName: String","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.serviceName","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/service-name.html","searchKeys":["serviceName","val serviceName: String","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.serviceName"]},{"name":"val serviceName: String","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceName","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/service-name.html","searchKeys":["serviceName","val serviceName: String","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.serviceName"]},{"name":"val serviceName: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.serviceName","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-connect-to-service-error/service-name.html","searchKeys":["serviceName","val serviceName: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.ConnectToServiceError.serviceName"]},{"name":"val serviceName: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.serviceName","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-disconnect-from-service-error/service-name.html","searchKeys":["serviceName","val serviceName: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.DisconnectFromServiceError.serviceName"]},{"name":"val serviceName: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.serviceName","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-general-error/service-name.html","searchKeys":["serviceName","val serviceName: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.GeneralError.serviceName"]},{"name":"val serviceName: String","description":"com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.serviceName","location":"framework/com.grarcht.shuttle.framework.visibility.error/-shuttle-service-error/-handle-message-error/service-name.html","searchKeys":["serviceName","val serviceName: String","com.grarcht.shuttle.framework.visibility.error.ShuttleServiceError.HandleMessageError.serviceName"]},{"name":"val shuttle: Shuttle","description":"com.grarcht.shuttle.framework.app.ShuttleServiceConfig.shuttle","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-service-config/shuttle.html","searchKeys":["shuttle","val shuttle: Shuttle","com.grarcht.shuttle.framework.app.ShuttleServiceConfig.shuttle"]},{"name":"val throwable: T? = null","description":"com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.throwable","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-pickup-cargo-result/-error/throwable.html","searchKeys":["throwable","val throwable: T? = null","com.grarcht.shuttle.framework.result.ShuttlePickupCargoResult.Error.throwable"]},{"name":"val throwable: T? = null","description":"com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.throwable","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-remove-cargo-result/-unable-to-remove/throwable.html","searchKeys":["throwable","val throwable: T? = null","com.grarcht.shuttle.framework.result.ShuttleRemoveCargoResult.UnableToRemove.throwable"]},{"name":"val throwable: T? = null","description":"com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.throwable","location":"framework/com.grarcht.shuttle.framework.result/-shuttle-store-cargo-result/-error/throwable.html","searchKeys":["throwable","val throwable: T? = null","com.grarcht.shuttle.framework.result.ShuttleStoreCargoResult.Error.throwable"]},{"name":"val useWithIPC: Boolean = false","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.useWithIPC","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection-config/use-with-i-p-c.html","searchKeys":["useWithIPC","val useWithIPC: Boolean = false","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnectionConfig.useWithIPC"]},{"name":"val useWithIPC: Boolean = false","description":"com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.useWithIPC","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware/-shuttle-lifecycle-aware-service-connection-config/use-with-i-p-c.html","searchKeys":["useWithIPC","val useWithIPC: Boolean = false","com.grarcht.shuttle.framework.content.serviceconnection.lifecycleaware.ShuttleLifecycleAwareServiceConnectionConfig.useWithIPC"]},{"name":"var ipcMessenger: Messenger?","description":"com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel.ipcMessenger","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-connected-service-model/ipc-messenger.html","searchKeys":["ipcMessenger","var ipcMessenger: Messenger?","com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel.ipcMessenger"]},{"name":"var ipcServiceMessenger: Messenger?","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.ipcServiceMessenger","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/ipc-service-messenger.html","searchKeys":["ipcServiceMessenger","var ipcServiceMessenger: Messenger?","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.ipcServiceMessenger"]},{"name":"var localService: S?","description":"com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel.localService","location":"framework/com.grarcht.shuttle.framework.app/-shuttle-connected-service-model/local-service.html","searchKeys":["localService","var localService: S?","com.grarcht.shuttle.framework.app.ShuttleConnectedServiceModel.localService"]},{"name":"var localService: S?","description":"com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.localService","location":"framework/com.grarcht.shuttle.framework.content.serviceconnection/-shuttle-service-connection/local-service.html","searchKeys":["localService","var localService: S?","com.grarcht.shuttle.framework.content.serviceconnection.ShuttleServiceConnection.localService"]}]
